[{"C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\index.js":"1","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\App.js":"2","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\components\\navbar\\navbar.jsx":"4","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\services\\authentication.js":"5","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\pages\\homePage\\homePage.jsx":"6","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\pages\\loginPage\\loginPage.jsx":"7","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\components\\formField\\formField.jsx":"8","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\components\\button\\button.jsx":"9","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\services\\history.js":"10","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\components\\commentsHomePage\\commentsHomePage.jsx":"11","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\services\\commentDatamanager.js":"12","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\config.js":"13","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\components\\repliesHomePage\\repliesHomePage.jsx":"14","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\components\\countLikes\\countLikes.jsx":"15","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\components\\createCommentModal\\createCommentModal.jsx":"16","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\pages\\signupPage\\signupPage.jsx":"17","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\services\\userDatamanager.js":"18"},{"size":500,"mtime":1608817952803,"results":"19","hashOfConfig":"20"},{"size":1254,"mtime":1609016591049,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":1407,"mtime":1608930627481,"results":"23","hashOfConfig":"20"},{"size":1004,"mtime":1608902793759,"results":"24","hashOfConfig":"20"},{"size":1357,"mtime":1609015057603,"results":"25","hashOfConfig":"20"},{"size":2292,"mtime":1608931054053,"results":"26","hashOfConfig":"20"},{"size":460,"mtime":1608819004678,"results":"27","hashOfConfig":"20"},{"size":337,"mtime":1608907301450,"results":"28","hashOfConfig":"20"},{"size":89,"mtime":1608907997652,"results":"29","hashOfConfig":"20"},{"size":2343,"mtime":1608991834270,"results":"30","hashOfConfig":"20"},{"size":2372,"mtime":1608932892069,"results":"31","hashOfConfig":"20"},{"size":154,"mtime":1608932933382,"results":"32","hashOfConfig":"20"},{"size":1471,"mtime":1608935444418,"results":"33","hashOfConfig":"20"},{"size":813,"mtime":1608935591505,"results":"34","hashOfConfig":"20"},{"size":2882,"mtime":1609016404241,"results":"35","hashOfConfig":"20"},{"size":2725,"mtime":1609018045196,"results":"36","hashOfConfig":"20"},{"size":327,"mtime":1609016837487,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1aetvq5",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\index.js",[],["82","83"],"C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\App.js",[],"C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\components\\navbar\\navbar.jsx",["84"],"import React, { Component } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport history from \"../../services/history\";\r\nimport Button from \"../button/button.jsx\";\r\nimport authentication from \"../../services/authentication\";\r\nimport \"./navbar.css\";\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isAuthenticated: false };\r\n  }\r\n\r\n  handleLogout = () => {\r\n    authentication.logout();\r\n    history.push(\"/\");\r\n    // <Redirect to=\"/\" refresh=\"true\" />;\r\n    window.location.href = '/'\r\n  };\r\n\r\n  render() {\r\n    this.setState = authentication.isAuthenticated();\r\n    console.log(this.setState)\r\n    return (\r\n      <React.Fragment>\r\n        <ul className=\"navigation\">\r\n        {!this.setState ? <>\r\n              <li>\r\n                <NavLink to=\"/\">\r\n                  <img src=\"logo.png\" className=\"logo\" alt=\"logo\"></img>\r\n                </NavLink>\r\n              </li>\r\n            </> : <>\r\n              <li>\r\n                <NavLink to=\"/\">\r\n                  <img src=\"logo.png\" className=\"logo\" alt=\"logo\"></img>\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <Button onClick={this.handleLogout} value=\"Déconnexion\" className=\"login-button\" />\r\n              </li>\r\n            </>}\r\n          \r\n        </ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\services\\authentication.js",["85"],"import axios from 'axios'\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nfunction logout() {\r\n    window.localStorage.removeItem(\"authToken\");\r\n    delete axios.defaults.headers[\"Authorization\"];\r\n}\r\n\r\nfunction authenticate(credentials) {\r\n    return axios\r\n        .post(\"http://localhost:3000/api/users/login\", credentials)\r\n        .then(response => response.data.token)\r\n        .then(token => {\r\n            window.localStorage.setItem(\"authToken\", token);\r\n            axios.defaults.headers[\"authorization\"] = \"Bearer \" + token;\r\n            return true;\r\n        })\r\n}\r\n\r\nfunction isAuthenticated() {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token != null) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction decode() {\r\n    const token = localStorage.getItem('authToken');\r\n\r\n    if (token) {\r\n        const jwtData = jwtDecode(token);\r\n        console.log(jwtData);\r\n    } \r\n}\r\n\r\nexport default {\r\n    authenticate,\r\n    logout,\r\n    isAuthenticated,\r\n    decode\r\n};","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\pages\\homePage\\homePage.jsx",[],"C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\pages\\loginPage\\loginPage.jsx",["86"],"import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport authentication from \"../../services/authentication\";\r\nimport history from \"../../services/history\";\r\nimport Button from \"../../components/button/button.jsx\";\r\nimport Field from \"../../components/formField/formField.jsx\";\r\nimport \"./loginPage.css\";\r\n\r\nclass LoginPage extends Component {\r\n  state = {\r\n    credentials: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n  };\r\n\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      authentication.authenticate(this.state.credentials);\r\n      history.push(\"/accueil\");\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n    window.location.href = '/accueil'\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    let { credentials } = this.state;\r\n    credentials[event.target.name] = event.target.value.trim();\r\n    this.setState({\r\n      credentials,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h2>Connexion à l'espace sécurisé</h2>\r\n          <form onSubmit={this.handleFormSubmit} className=\"login-form\">\r\n            <ul>\r\n              <Field\r\n                name=\"email\"\r\n                type=\"email\"\r\n                label=\"Identifiant\"\r\n                onChange={this.handleChange}\r\n                value={this.state.credentials[\"email\"]}\r\n                span=\"Entrez votre adresse email ici\"\r\n              />\r\n              <Field\r\n                name=\"password\"\r\n                type=\"password\"\r\n                label=\"Mot de passe\"\r\n                onChange={this.handleChange}\r\n                value={this.state.credentials[\"password\"]}\r\n                span=\"Entrez votre mot de passe ici\"\r\n              />\r\n            </ul>\r\n            <div>\r\n              <Button\r\n                value=\"Connexion\"\r\n                type=\"submit\"\r\n                className=\"login-button\"\r\n              />\r\n            </div>\r\n          </form>\r\n          <div className=\"login-form\">\r\n            <p>\r\n              Pas encore de compte, inscrivez-vous <Link to=\"/signup\">ici</Link>\r\n              !\r\n            </p>\r\n          </div>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\components\\formField\\formField.jsx",[],"C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\components\\button\\button.jsx",[],"C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\services\\history.js",[],"C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\components\\commentsHomePage\\commentsHomePage.jsx",["87"],"import moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport CommentsAPI from \"../../services/commentDatamanager\";\r\nimport \"./commentsHomePage.css\";\r\nimport RepliesHomePage from \"../repliesHomePage/repliesHomePage\";\r\nimport CountedLikes from \"../countLikes/countLikes\";\r\n\r\nclass CommentsHomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.token = localStorage.getItem(\"authToken\");\r\n    this.jwtData = jwtDecode(this.token);\r\n    this.username = this.jwtData.username;\r\n    this.formatDate = (str) => moment(str).format(\"DD/MM/YYYY\");\r\n  }\r\n\r\n  state = {\r\n    comments: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getComments();\r\n  }\r\n\r\n  getComments() {\r\n    try {\r\n      CommentsAPI.findMainComments().then((res) => {\r\n        this.setState({ comments: res.data });\r\n        console.log(res.data);\r\n      });\r\n    } catch (error) {}\r\n  }\r\n\r\n  render() {\r\n    let { comments } = this.state;\r\n    return (\r\n      <div>\r\n        {comments.map((comment) => (\r\n          <div className=\"comment-homepage\" key={comment.id}>\r\n            <div className=\"username\">{comment.username}</div>\r\n            <div className=\"date\">{this.formatDate(comment.created_at)}</div>\r\n            <div>{comment.content}</div>\r\n            <div>\r\n              <img src={comment.image} className=\"image-homepage\"></img>\r\n              <div className=\"counted-likes\">\r\n                <div className=\"under-image\">\r\n                  <span>\r\n                  <CountedLikes id={comment.id} />\r\n                </span>\r\n                  <span>\r\n                    <button type=\"button\" className=\"replies-button\">\r\n                      Commentaires\r\n                    </button>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div>\r\n              <span className=\"like\">J'aime</span>\r\n              \r\n                {/* <CreateLike id={comment.id} /> */}\r\n              <span className=\"share\">Partager</span>\r\n              <span className=\"comment\">Commenter</span>\r\n            </div>\r\n                <div className=\"createReply\">\r\n                  <RepliesHomePage id={comment.id} />\r\n                </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommentsHomePage;\r\n","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\services\\commentDatamanager.js",["88"],"import axios from \"axios\";\r\n// import Cache from \"./cache\";\r\nimport { COMMENTS_API } from \"../config\";\r\n\r\nasync function findMainComments() {\r\n  const token = localStorage.getItem(\"authToken\");\r\n  // const cachedComments = await Cache.get(\"comments\");\r\n\r\n  // if (cachedComments) return cachedComments;\r\n\r\n  const config = {\r\n    method: \"get\",\r\n    url: `${COMMENTS_API}`,\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  };\r\n  // console.log(config);\r\n  let data = await axios(config);\r\n  return data;\r\n}\r\n\r\nasync function findChildComments(id) {\r\n  const token = localStorage.getItem(\"authToken\");\r\n//   const cachedComments = await Cache.get(\"comments\");\r\n\r\n//   if (cachedComments) return cachedComments;\r\n\r\n  const config = {\r\n    method: \"get\",\r\n    url: `${COMMENTS_API + \"/\" + id + \"/childComments\"}`,\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  };\r\n  let data = await axios(config);\r\n  return data;\r\n}\r\n\r\nasync function create(comment) {\r\n  const token = localStorage.getItem(\"authToken\");\r\n  const config = {\r\n    method: \"post\",\r\n    url: `${COMMENTS_API}`,\r\n    data: comment,\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  };\r\n  let response = await axios(config);\r\n  console.log(response);\r\n  return response;\r\n}\r\n\r\nasync function createReply(comment, id) {\r\n  const token = localStorage.getItem(\"authToken\");\r\n  const config = {\r\n    method: \"post\",\r\n    url: `${COMMENTS_API + \"/\" + id + \"/replies\"}`,\r\n    data: comment,\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  };\r\n  let response = await axios(config);\r\n  console.log(response);\r\n  return response;\r\n}\r\n\r\nasync function countLikes(id) {\r\n  const token = localStorage.getItem(\"authToken\");\r\n  const config = {\r\n    method: \"get\",\r\n    url: `${COMMENTS_API + \"/\" + id + \"/likes\"}`,\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  };\r\n  let data = await axios(config);\r\n  return data;\r\n}\r\n\r\nasync function createLike(like, id) {\r\n  const token = localStorage.getItem(\"authToken\");\r\n  const config = {\r\n    method: \"post\",\r\n    url: `${COMMENTS_API + \"/\" + id + \"/likes\"}`,\r\n    data: like,\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  };\r\n  let response = await axios(config);\r\n  console.log(response);\r\n  return response;\r\n}\r\n\r\nexport default {\r\n  findMainComments,\r\n  create,\r\n  countLikes,\r\n  findChildComments,\r\n  createReply,\r\n  createLike\r\n};\r\n","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\config.js",[],"C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\components\\repliesHomePage\\repliesHomePage.jsx",["89"],"import moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport CommentsAPI from \"../../services/commentDatamanager\";\r\nimport \"./repliesHomePage.css\"\r\n\r\nclass RepliesHomePage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.id=props.id;\r\n        this.token = localStorage.getItem(\"authToken\");\r\n        this.jwtData = jwtDecode(this.token);\r\n        this.username = this.jwtData.username;\r\n        this.formatDate = (str) => moment(str).format(\"DD/MM/YYYY\");\r\n      }\r\n\r\n    state = {\r\n        replies: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getReplies();\r\n    }\r\n\r\n    getReplies() {\r\n        try {\r\n            CommentsAPI.findChildComments(this.id)\r\n              .then(res => {\r\n                this.setState({ replies: res.data });\r\n            })\r\n          } catch (error) {\r\n          }\r\n    }\r\n\r\n  render() {\r\n    let { replies } = this.state;\r\n    return (\r\n        <div>\r\n        {replies.map(reply => (\r\n          <div className=\"reply-homepage\" key={reply.id}>\r\n            <div className=\"reply-username\">{reply.username}</div>\r\n            <div className=\"reply-date\">{this.formatDate(reply.created_at)}</div>\r\n            <div>{reply.content}</div>\r\n            <div>\r\n              <img src={reply.image} className=\"image-homepage\"></img>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )}\r\n}\r\n\r\nexport default RepliesHomePage;\r\n","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\components\\countLikes\\countLikes.jsx",["90"],"import React, { Component } from \"react\";\r\nimport CommentsAPI from \"../../services/commentDatamanager\";\r\n\r\nclass CountLikes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.id = props.id;\r\n  }\r\n\r\n  state = {\r\n    likes: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getLikes();\r\n  }\r\n\r\n  getLikes() {\r\n    try {\r\n      CommentsAPI.countLikes(this.id).then((res) => {\r\n        this.setState({ replies: res.data });\r\n        console.log(res.data);\r\n      });\r\n    } catch (error) {}\r\n  }\r\n\r\n  render() {\r\n    let { likes } = this.state;\r\n    return (\r\n        <div>\r\n        {/* {likes.map((like) => ( */}\r\n          <div className=\"\">\r\n            <span className=\"likesCount\">{}</span>\r\n          </div>\r\n         {/* ))}  */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountLikes;\r\n","C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\components\\createCommentModal\\createCommentModal.jsx",[],"C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\pages\\signupPage\\signupPage.jsx",[],"C:\\Users\\Nathalie\\Documents\\Openclassrooms\\Parcours développeur web\\Projet 7\\Groupomania-React\\frontend\\src\\services\\userDatamanager.js",["91"],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":2,"column":19,"nodeType":"98","messageId":"99","endLine":2,"endColumn":27},{"ruleId":"100","severity":1,"message":"101","line":37,"column":1,"nodeType":"102","endLine":42,"endColumn":3},{"ruleId":"96","severity":1,"message":"97","line":2,"column":16,"nodeType":"98","messageId":"99","endLine":2,"endColumn":24},{"ruleId":"103","severity":1,"message":"104","line":45,"column":15,"nodeType":"105","endLine":45,"endColumn":67},{"ruleId":"100","severity":1,"message":"101","line":86,"column":1,"nodeType":"102","endLine":93,"endColumn":3},{"ruleId":"103","severity":1,"message":"104","line":46,"column":15,"nodeType":"105","endLine":46,"endColumn":65},{"ruleId":"96","severity":1,"message":"106","line":28,"column":11,"nodeType":"98","messageId":"99","endLine":28,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":15,"column":1,"nodeType":"102","endLine":17,"endColumn":3},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'likes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]